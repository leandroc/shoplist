rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /lists/{list} {
      allow read: if isSignedIn() && isOwner(resource.data.userId);
      allow write: if isSignedIn() && isOwner(incomingData().userId) && isRequiredFilled(incomingData(), ['name']);
    }

    match /items/{item} {
      allow read: if isSignedIn() && isOwner(resource.data.userId);
      allow write: if isSignedIn() && isOwner(incomingData().userId) && isRequiredFilled(incomingData(), ['userId', 'listId', 'name', 'quantity']);
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId
    }

    // the data that exists in database
    // function existingData() {
    //   return request.data;
    // }

    // the data from incoming request
    function incomingData() {
      return request.resource.data;
    }

    // the required input is filled
    function isRequiredFilled(data, requiredKeys) {
      return data.keys().hasAll(requiredKeys);
    }
  }
}
